# see documentation, e.g.
# - https://packaging.python.org/en/latest/specifications/declaring-project-metadata/#declaring-project-metadata
# - https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html
# - https://www.python.org/dev/peps/pep-0621/

[build-system]
requires = ["setuptools>=64.0.0", "setuptools-scm", "wheel"]
build-backend = "setuptools.build_meta"

[project]
# see documentation, e.g.
# - https://packaging.python.org/en/latest/specifications/declaring-project-metadata/#declaring-project-metadata
# - https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html
# - https://www.python.org/dev/peps/pep-0621/

[build-system]
requires = ["setuptools>=64.0.0", "setuptools-scm", "wheel"]
build-backend = "setuptools.build_meta"

[project]
authors = [
    {name = "Herman van Dellen", email = "h.vandellen@umcutrecht.nl"},
    {name = "Yorben Lodema", email = "d.y.lodema-2@umcutrecht.nl"}
]
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dependencies = [
    "PySimpleGUI",
    "pandas",
    "mne",
    "numpy",
    "matplotlib",  # Required for MNE plotting functions
]
description = "eeg preprocessing software"
keywords = ["eeg", "preprocessing", "neuroscience", "medical"]
license = {file = "LICENSE"}
name = "eeg_preprocessing_umcu"
readme = {file = "README.md", content-type = "text/markdown"}
requires-python = ">=3.8"
version = "0.1.0"

[project.optional-dependencies]
dev = [
]

publishing = [
    "build",
    "twine",
    "wheel",
]

[project.urls]
Repository = "https://github.com/snorben/eeg_preprocessing_umcu"
Issues = "https://github.com/snorben/eeg_preprocessing_umcu/issues"
Changelog = "https://github.com/snorben/eeg_preprocessing_umcu/CHANGELOG.md"

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.coverage.run]
branch = true
source = ["src/eeg_preprocessing_umcu"]
command_line = "-m pytest"

[tool.isort]
lines_after_imports = 2
force_single_line = 1
no_lines_before = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
known_first_party = "eeg_preprocessing_umcu"
src_paths = ["src/eeg_preprocessing_umcu", "tests"]
line_length = 120

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py38,py39,py310,py311,py312
skip_missing_interpreters = true
[testenv]
commands = pytest
extras = dev
"""

[tool.ruff]
# Enable Pyflakes `E` and `F` codes by default.
select = [
    "F",  # Pyflakes
    "E",  # pycodestyle (error)
    "W",    # pycodestyle (warning)
    # "C90",  # mccabe
    "I",    # isort
    "D",    # pydocstyle
    # "PL",   # Pylint
    # "PLC",  # Convention
    # "PLE",  # Error
    # "PLR",  # Refactor
    # "PLW",  # Warning

]
ignore = [
    'D100',  # Missing module docstring
    'D104',  # Missing public package docstring
    # The following list excludes rules irrelevant to the Google style
    'D203',
    'D204',
    'D213',
    'D215',
    'D400',
    'D401',
    'D404',
    'D406',
    'D407',
    'D408',
    'D409',
    'D413',
]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["A", "B", "C", "D", "E", "F", "I"]
unfixable = []

exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    ".venv",
    "scripts",
]
per-file-ignores = {}
